apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-postgres-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-postgres
  template:
    metadata:
      labels:
        app: auth-postgres
    spec:
      containers:
        - name: auth-postgres
          image: postgres:14-alpine
          imagePullPolicy: 'IfNotPresent'
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credential
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credential
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-auth-config
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-auth-config
                  key: POSTGRES_HOST
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: auth-postgres-db
      volumes:
        - name: auth-postgres-db
          persistentVolumeClaim:
            claimName: postgressql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: auth-postgres-srv
spec:
  selector:
    app: auth-postgres
  ports:
    - name: db
      port: 5432
